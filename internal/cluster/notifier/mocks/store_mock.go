// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spoke-d/thermionic/internal/cluster (interfaces: StoreProvider)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	cluster "github.com/spoke-d/thermionic/internal/db/cluster"
	database "github.com/spoke-d/thermionic/internal/db/database"
	reflect "reflect"
)

// MockStoreProvider is a mock of StoreProvider interface
type MockStoreProvider struct {
	ctrl     *gomock.Controller
	recorder *MockStoreProviderMockRecorder
}

// MockStoreProviderMockRecorder is the mock recorder for MockStoreProvider
type MockStoreProviderMockRecorder struct {
	mock *MockStoreProvider
}

// NewMockStoreProvider creates a new mock instance
func NewMockStoreProvider(ctrl *gomock.Controller) *MockStoreProvider {
	mock := &MockStoreProvider{ctrl: ctrl}
	mock.recorder = &MockStoreProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStoreProvider) EXPECT() *MockStoreProviderMockRecorder {
	return m.recorder
}

// Disk mocks base method
func (m *MockStoreProvider) Disk(arg0 database.DB) (cluster.ServerStore, error) {
	ret := m.ctrl.Call(m, "Disk", arg0)
	ret0, _ := ret[0].(cluster.ServerStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Disk indicates an expected call of Disk
func (mr *MockStoreProviderMockRecorder) Disk(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Disk", reflect.TypeOf((*MockStoreProvider)(nil).Disk), arg0)
}

// Memory mocks base method
func (m *MockStoreProvider) Memory() cluster.ServerStore {
	ret := m.ctrl.Call(m, "Memory")
	ret0, _ := ret[0].(cluster.ServerStore)
	return ret0
}

// Memory indicates an expected call of Memory
func (mr *MockStoreProviderMockRecorder) Memory() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Memory", reflect.TypeOf((*MockStoreProvider)(nil).Memory))
}
