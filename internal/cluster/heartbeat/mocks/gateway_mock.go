// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spoke-d/thermionic/internal/cluster/heartbeat (interfaces: Gateway)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	cert "github.com/spoke-d/thermionic/internal/cert"
	heartbeat "github.com/spoke-d/thermionic/internal/cluster/heartbeat"
	db "github.com/spoke-d/thermionic/internal/db"
	reflect "reflect"
)

// MockGateway is a mock of Gateway interface
type MockGateway struct {
	ctrl     *gomock.Controller
	recorder *MockGatewayMockRecorder
}

// MockGatewayMockRecorder is the mock recorder for MockGateway
type MockGatewayMockRecorder struct {
	mock *MockGateway
}

// NewMockGateway creates a new mock instance
func NewMockGateway(ctrl *gomock.Controller) *MockGateway {
	mock := &MockGateway{ctrl: ctrl}
	mock.recorder = &MockGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGateway) EXPECT() *MockGatewayMockRecorder {
	return m.recorder
}

// Cert mocks base method
func (m *MockGateway) Cert() *cert.Info {
	ret := m.ctrl.Call(m, "Cert")
	ret0, _ := ret[0].(*cert.Info)
	return ret0
}

// Cert indicates an expected call of Cert
func (mr *MockGatewayMockRecorder) Cert() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Cert", reflect.TypeOf((*MockGateway)(nil).Cert))
}

// Clustered mocks base method
func (m *MockGateway) Clustered() bool {
	ret := m.ctrl.Call(m, "Clustered")
	ret0, _ := ret[0].(bool)
	return ret0
}

// Clustered indicates an expected call of Clustered
func (mr *MockGatewayMockRecorder) Clustered() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Clustered", reflect.TypeOf((*MockGateway)(nil).Clustered))
}

// DB mocks base method
func (m *MockGateway) DB() heartbeat.Node {
	ret := m.ctrl.Call(m, "DB")
	ret0, _ := ret[0].(heartbeat.Node)
	return ret0
}

// DB indicates an expected call of DB
func (mr *MockGatewayMockRecorder) DB() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DB", reflect.TypeOf((*MockGateway)(nil).DB))
}

// RaftNodes mocks base method
func (m *MockGateway) RaftNodes() ([]db.RaftNode, error) {
	ret := m.ctrl.Call(m, "RaftNodes")
	ret0, _ := ret[0].([]db.RaftNode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RaftNodes indicates an expected call of RaftNodes
func (mr *MockGatewayMockRecorder) RaftNodes() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RaftNodes", reflect.TypeOf((*MockGateway)(nil).RaftNodes))
}
